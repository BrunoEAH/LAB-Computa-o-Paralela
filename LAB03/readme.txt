 O código abaixo pede ao usuário uma valor para a variável que será compartilhada entre o processo filho e o processo pai, após isso ele demanda do usuário um valor para a adição à variável compartilhada e outro para a multiplicação.
  No início declara-se shmID, um identificador de segmento da memória compartilhada e a variável compartilhada como um ponteiro. Depois é usada a função shmget , em que se cria uma área de memória compartilhada, que recebe como argumentos IPC_PRIVATE, a qual é uma chave de identificação que demanda um segmento privado da memória compartilhada, 4*sizeof(int), o qual é o tamanho do segmento (neste caso 4 inteiros) e por último IPC_CREAT | 0666, o qual é um flag de permissão.
  Em seguida se aloca a variável compartilhada no espaço do segmento da memória compartilhada usando a função shmat, que recebe o shmID como o identficador de segmento da memória compartilhada, NULL como endereço do acoplamento do segmento e 0 como flag para leitura e escrita.
  O processo pai imprime o valor da variável compartilhada e depois através do comando wait(&status) ele espera o processo filho. Após isto, o processo filho acessa a variável, faz a adição a qual modifica a variável global e termina. Depois o processo pai volta,faz uma multiplicacao que altera o valor variável global novamente e imprime novamente a variável.
  Ao final a variável compartilhada é desacoplada do segmento de memória compartilhada usando a função shmdt e usando a função shmctl ele libera o segmento de memória compartilhada.